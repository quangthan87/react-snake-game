{"version":3,"sources":["App.js","utils.js","components/Canvas.js","constants.js","components/Pixel.js","components/Board.js","components/Snake.js","components/Food.js","hooks/useInterval.js","index.js"],"names":["areSamePos","pos1","pos2","x","y","Container","styled","div","props","width","height","borderColor","Canvas","children","PIXEL_SIZE","Square","attrs","style","left","top","background","border","Pixel","Board","pixels","showGrid","Fragment","map","pixel","position","id","React","memo","Snake","positions","Food","Math","floor","random","ScoreBar","ControlBar","i","j","push","initialState","snake","food","direction","directionQueue","gameOver","paused","score","highestScore","reducer","state","action","dir1","dir2","type","currentDir","queue","length","candidateDir","shift","nextHead","currSnake","head","some","p","splice","availPixels","filter","idx","payload","App","useReducer","dispatch","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","handleKeyDown","useCallback","e","key","window","removeEventListener","addEventListener","onChange","target","checked","htmlFor","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.486fa448.chunk.js","sourcesContent":["import React, { useEffect, useCallback, useReducer } from \"react\";\nimport { useInterval } from \"./hooks/useInterval\";\nimport { areSamePos, areOpposite } from \"./utils\";\n\nimport styled from \"styled-components\";\n\nimport Canvas from \"./components/Canvas\";\nimport Board from \"./components/Board\";\nimport Snake from \"./components/Snake\";\nimport Food from \"./components/Food\";\n\nimport { CANVAS_WIDTH, CANVAS_HEIGHT, ROWS, COLS } from \"./constants\";\n\nconst Container = styled.div`\n  display: grid;\n  justify-content: center;\n  gap: 4px;\n`;\n\nconst ScoreBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ControlBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst pixels = [];\n\nfor (let i = 0; i < ROWS; i++) {\n  for (let j = 0; j < COLS; j++) {\n    pixels.push({\n      id: i + \"_\" + j,\n      position: { x: j, y: i },\n      background: \"white\"\n    });\n  }\n}\n\nconst initialState = {\n  snake: [\n    { x: 0, y: 0 },\n    { x: 1, y: 0 },\n    { x: 2, y: 0 }\n  ],\n  food: {},\n  direction: \"right\",\n  directionQueue: [],\n  gameOver: null,\n  paused: false,\n  score: 0,\n  highestScore: 0\n};\n\nconst reducer = (state, action) => {\n  const {\n    snake,\n    food,\n    direction,\n    directionQueue,\n    paused,\n    score,\n    highestScore\n  } = state;\n\n  switch (action.type) {\n    case \"SNAKE_STEP\":\n      let currentDir = direction;\n      const queue = [...directionQueue];\n\n      // Get current direction from queue\n      while (queue.length > 0) {\n        let candidateDir = queue.shift();\n\n        if (!areOpposite(candidateDir, currentDir)) {\n          currentDir = candidateDir;\n          break;\n        }\n      }\n\n      const currSnake = [...snake];\n      const head = currSnake[currSnake.length - 1];\n\n      let nextHead;\n\n      switch (currentDir) {\n        case \"right\":\n          nextHead = { ...head, x: head.x + 1 };\n          break;\n        case \"left\":\n          nextHead = { ...head, x: head.x - 1 };\n          break;\n        case \"up\":\n          nextHead = { ...head, y: head.y - 1 };\n          break;\n        case \"down\":\n          nextHead = { ...head, y: head.y + 1 };\n          break;\n        default:\n      }\n\n      // Snake hit wall\n      if (\n        nextHead.y >= ROWS ||\n        nextHead.y < 0 ||\n        nextHead.x < 0 ||\n        nextHead.x >= COLS\n      ) {\n        return {\n          ...state,\n          gameOver: \"lose\"\n        };\n      }\n\n      // Snake hit its own body\n      if (currSnake.some((p) => areSamePos(p, nextHead))) {\n        return {\n          ...state,\n          gameOver: \"lose\"\n        };\n      }\n\n      // Eat food\n      if (areSamePos(nextHead, food)) {\n        return {\n          ...state,\n          snake: [...currSnake, nextHead],\n          direction: currentDir,\n          directionQueue: queue,\n          score: score + 1\n        };\n      } else {\n        return {\n          ...state,\n          snake: [...currSnake.splice(1), nextHead],\n          direction: currentDir,\n          directionQueue: queue\n        };\n      }\n    case \"SPAWN_FOOD\":\n      const availPixels = pixels.filter(\n        (pixel) =>\n          !snake.some((p) => areSamePos(p, pixel.position)) &&\n          !areSamePos(food, pixel.position)\n      );\n\n      if (availPixels.length === 0) {\n        return {\n          ...state,\n          gameOver: \"win\"\n        };\n      }\n\n      const idx = Math.floor(Math.random() * availPixels.length);\n\n      return {\n        ...state,\n        food: availPixels[idx].position\n      };\n    case \"CHANGE_DIRECTION\":\n      return {\n        ...state,\n        directionQueue: [...directionQueue, action.payload]\n      };\n    case \"PAUSE_GAME\":\n      return {\n        ...state,\n        paused: !paused\n      };\n    case \"RESET_GAME\":\n      return {\n        ...initialState,\n        highestScore: highestScore\n      };\n    case \"SET_HIGHEST_SCORE\":\n      return {\n        ...state,\n        highestScore: score\n      };\n    case \"TOGGLE_GRID\":\n      return {\n        ...state,\n        showGrid: action.payload\n      };\n    default:\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { snake, food, gameOver, paused, score, highestScore, showGrid } =\n    state;\n\n  useInterval(\n    () => {\n      dispatch({ type: \"SNAKE_STEP\" });\n    },\n    gameOver || paused ? null : 50\n  );\n\n  const handleKeyDown = useCallback(\n    (e) => {\n      switch (e.key) {\n        case \"ArrowLeft\":\n        case \"a\":\n        case \"A\":\n          dispatch({ type: \"CHANGE_DIRECTION\", payload: \"left\" });\n          break;\n        case \"ArrowRight\":\n        case \"d\":\n        case \"D\":\n          dispatch({ type: \"CHANGE_DIRECTION\", payload: \"right\" });\n          break;\n        case \"ArrowUp\":\n        case \"w\":\n        case \"W\":\n          dispatch({ type: \"CHANGE_DIRECTION\", payload: \"up\" });\n          break;\n        case \"ArrowDown\":\n        case \"s\":\n        case \"S\":\n          dispatch({ type: \"CHANGE_DIRECTION\", payload: \"down\" });\n          break;\n        default:\n      }\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    if (!gameOver) {\n      dispatch({ type: \"SPAWN_FOOD\" });\n      window.addEventListener(\"keydown\", handleKeyDown);\n    } else {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n\n      if (score > highestScore) {\n        dispatch({ type: \"SET_HIGHEST_SCORE\" });\n      }\n    }\n  }, [gameOver, score, highestScore, handleKeyDown]);\n\n  const handleReset = () => {\n    dispatch({ type: \"RESET_GAME\" });\n  };\n\n  const handlePause = () => {\n    dispatch({ type: \"PAUSE_GAME\" });\n  };\n\n  const handleShowGrid = (e) => {\n    dispatch({ type: \"TOGGLE_GRID\", payload: e.target.checked });\n  };\n\n  return (\n    <Container>\n      <ScoreBar>\n        <h4>Score: {score}</h4>\n        <h4>Highest Score: {highestScore}</h4>\n      </ScoreBar>\n      <Canvas\n        width={CANVAS_WIDTH}\n        height={CANVAS_HEIGHT}\n        borderColor={!gameOver ? \"black\" : gameOver === \"win\" ? \"green\" : \"red\"}\n      >\n        <Board pixels={pixels} showGrid={showGrid} />\n        <Snake positions={snake} />\n        <Food position={food} />\n      </Canvas>\n      <ControlBar>\n        <div>\n          <input type=\"checkbox\" id=\"showGrid\" onChange={handleShowGrid} />\n          <label htmlFor=\"showGrid\">Show grid</label>\n        </div>\n        <div>\n          <button onClick={handleReset}>Play again</button>\n          {!gameOver && (\n            <button onClick={handlePause}>{paused ? \"Resume\" : \"Pause\"}</button>\n          )}\n        </div>\n      </ControlBar>\n    </Container>\n  );\n};\n\nexport default App;\n","export const areSamePos = (pos1, pos2) => {\n  return pos1.x === pos2.x && pos1.y === pos2.y;\n};\n\nexport const areOpposite = (dir1, dir2) => {\n  if (dir1 === \"left\" && dir2 === \"right\") {\n    return true;\n  }\n  if (dir1 === \"right\" && dir2 === \"left\") {\n    return true;\n  }\n  if (dir1 === \"up\" && dir2 === \"down\") {\n    return true;\n  }\n  if (dir1 === \"down\" && dir2 === \"up\") {\n    return true;\n  }\n  return false;\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    position: relative;\n    width: ${props => props.width + \"px\"};\n    height: ${props => props.height + \"px\"};\n    border: 5px solid ${props => props.borderColor};\n    margin-left: 4px;\n    box-sizing: content-box;\n`;\n\nconst Canvas = (props) => {\n    return (\n        <Container width={props.width} height={props.height} borderColor={props.borderColor}>{props.children}</Container>\n    )\n};\n\nexport default Canvas;\n","export const CANVAS_WIDTH = 500;\nexport const CANVAS_HEIGHT = 300;\nexport const PIXEL_SIZE = 10;\nexport const ROWS = 30;\nexport const COLS = 50;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { PIXEL_SIZE } from \"../constants\";\n\nconst Square = styled.div.attrs((props) => ({\n  style: {\n    left: props.left + \"px\",\n    top: props.top + \"px\",\n    background: props.background,\n    border: props.border ? \"1px solid #aaa\" : \"none\"\n  }\n}))`\n  position: absolute;\n  width: ${PIXEL_SIZE + \"px\"};\n  height: ${PIXEL_SIZE + \"px\"};\n`;\n\nconst Pixel = ({ left, top, background, border }) => {\n  return (\n    <Square left={left} top={top} background={background} border={border} />\n  );\n};\n\nexport default Pixel;\n","import React from \"react\";\n\nimport Pixel from \"./Pixel\";\n\nimport { PIXEL_SIZE } from \"../constants\";\n\nconst Board = ({ pixels, showGrid }) => {\n  return (\n    <React.Fragment>\n      {pixels.map((pixel) => (\n        <Pixel\n          key={pixel.id}\n          left={pixel.position.x * PIXEL_SIZE}\n          top={pixel.position.y * PIXEL_SIZE}\n          background={pixel.background}\n          border={showGrid}\n        />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Board);\n","import React from \"react\";\n\nimport Pixel from \"./Pixel\";\n\nimport { PIXEL_SIZE } from \"../constants\";\n\nconst Snake = ({ positions }) => {\n  return (\n    <React.Fragment>\n      {positions.map((position) => (\n        <Pixel\n          key={`${position.x}_${position.y}`}\n          left={position.x * PIXEL_SIZE}\n          top={position.y * PIXEL_SIZE}\n          background=\"black\"\n        />\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default Snake;\n","import React from \"react\";\n\nimport Pixel from \"./Pixel\";\n\nimport { PIXEL_SIZE } from \"../constants\";\n\nconst Food = ({ position }) => {\n  return (\n    <Pixel\n      left={position.x * PIXEL_SIZE}\n      top={position.y * PIXEL_SIZE}\n      background={Math.floor(Math.random() * 10) < 5 ? \"red\" : \"blue\"}\n    />\n  );\n};\n\nexport default React.memo(Food);\n","import { useEffect, useRef } from \"react\";\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n\n    // Remember the latest callback\n    useEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n\n    // Set up the interval\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}